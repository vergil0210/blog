(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{523:function(t,a,e){t.exports=e.p+"assets/img/1583806256(1).b7dad100.png"},524:function(t,a,e){t.exports=e.p+"assets/img/1583806405(1).b2378272.png"},554:function(t,a,e){"use strict";e.r(a);var v=e(6),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"常用注解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用注解"}},[t._v("#")]),t._v(" 常用注解")]),t._v(" "),v("p",[t._v("@Entity\t指明这是一个实体类")]),t._v(" "),v("p",[t._v("@Table.name()用来指定映射表的表名。")]),t._v(" "),v("p",[t._v("如果缺省@Table注释，系统默认采用类名作为映射表的表名。实体Bean的每个实例代表数据表中的一行数据，行中的一列对应实例中的一个属性。")]),t._v(" "),v("p",[t._v("@Id 标注用于声明一个实体类的属性映射为数据库的主键列\t可以放在声明语句上或者属性的getter方法上")]),t._v(" "),v("p",[t._v("@GeneratedValue 用于标注主键的生成策略，通过strategy 属性指定。默认情况下，JPA 自动选择一个最适合底层数据库的主键生成策略：SqlServer对应identity，MySQL 对应 auto increment")]),t._v(" "),v("p",[t._v("@Query")]),t._v(" "),v("p",[t._v("自定义语句时，需要再方法名上加此注解")]),t._v(" "),v("p",[t._v("param:")]),t._v(" "),v("p",[t._v("value: 数据库语句")]),t._v(" "),v("p",[t._v("nativeQuery：是否使用本地查询（默认为false）")]),t._v(" "),v("p",[t._v("@Modifying")]),t._v(" "),v("p",[t._v("配置在dao层接口方法上，表示该操作是一个更新操作")]),t._v(" "),v("p",[t._v("（执行自定义 更新/删除 操作时 需要添加实物支持")]),t._v(" "),v("p",[t._v("且spring Data JPA 会默认执行结束后回滚失误")]),t._v(" "),v("p",[t._v("所以需要再加上以下注解：）")]),t._v(" "),v("p",[t._v('@Rollback(value="false")')]),t._v(" "),v("h2",{attrs:{id:"编写dao层实现类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#编写dao层实现类"}},[t._v("#")]),t._v(" 编写dao层实现类")]),t._v(" "),v("h3",{attrs:{id:"流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[t._v("#")]),t._v(" 流程")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("只需要编写dao层接口，不需要编写dao层接口的实现类")])]),t._v(" "),v("li",[v("p",[t._v("dao层接口规范")])])]),t._v(" "),v("ol",[v("li",[v("p",[t._v("为类名添加@Repository注解加入Spring容器")])]),t._v(" "),v("li",[v("p",[t._v("需要集成两个接口 （JpaRepository , JpaSpecificationExecutor）")])]),t._v(" "),v("li",[v("p",[t._v("需要指定相应的泛型")])])]),t._v(" "),v("p",[t._v("JpaRepository<操作的实体类类型，实体类中主键属性的类型>")]),t._v(" "),v("p",[t._v("​\t\t封装了基本CRUD操作")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("JpaSpecificationExecutor<操作的实体类类型>\n\n\t封装了复杂查询(分页)\n")])])]),v("p",[t._v("**完成之后的dao层接口会自动拥有基本的CRUD方法 **")]),t._v(" "),v("h2",{attrs:{id:"常用方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("save():")]),t._v(" "),v("p",[t._v("保存或者更新")]),t._v(" "),v("p",[t._v("根据传递的对象是否存在主键id，如果没有id主键属性，则为插入insert")]),t._v(" "),v("p",[t._v("否则则为更新update")]),t._v(" "),v("p",[t._v("findOne()&getOne()")])]),t._v(" "),v("li",[v("p",[t._v("findOne:")]),t._v(" "),v("p",[t._v("底层调用em.find()\t\t\t：立即加载")])]),t._v(" "),v("li",[v("p",[t._v("getOne:")]),t._v(" "),v("p",[t._v("底层调用em.getReference\t：延迟加载")]),t._v(" "),v("p",[t._v("需要在方法名上加 @Transactional 标签")]),t._v(" "),v("p",[t._v("返回的是动态代理对象，并且是什么时候用什么时候才加载")]),t._v(" "),v("p",[t._v("多个占位符参数")]),t._v(" "),v("p",[t._v("赋值时，默认情况下，占位符的顺序需要和方法参数中的顺序保持一致")]),t._v(" "),v("p",[t._v("顺序不一致时，需要在占位符后面加上参数顺序的索引（索引从1开始）")])])]),t._v(" "),v("h2",{attrs:{id:"方法名称规则查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法名称规则查询"}},[t._v("#")]),t._v(" 方法名称规则查询")]),t._v(" "),v("p",[t._v("约定：")]),t._v(" "),v("p",[t._v("findBy：查询")]),t._v(" "),v("p",[t._v("对象中的属性名（首字母大写），查询的条件")]),t._v(" "),v("p",[t._v("Name")]),t._v(" "),v("p",[t._v("findByName()\t根据客户名称查询")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Keyword")]),t._v(" "),v("th",[t._v("Sample")]),t._v(" "),v("th",[t._v("JPQL snippet")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("And")]),t._v(" "),v("td",[t._v("findByLastnameAndFirstname")]),t._v(" "),v("td",[t._v("… where x.lastname = ?1 and x.firstname = ?2")])]),t._v(" "),v("tr",[v("td",[t._v("Or")]),t._v(" "),v("td",[t._v("findByLastnameOrFirstname")]),t._v(" "),v("td",[t._v("… where x.lastname = ?1 or x.firstname = ?2")])]),t._v(" "),v("tr",[v("td",[t._v("Is, Equals")]),t._v(" "),v("td",[t._v("findByFirstname,findByFirstnameIs,findByFirstnameEquals")]),t._v(" "),v("td",[t._v("… where x.firstname = ?1")])]),t._v(" "),v("tr",[v("td",[t._v("Between")]),t._v(" "),v("td",[t._v("findByStartDateBetween")]),t._v(" "),v("td",[t._v("… where x.startDate between ?1 and ?2")])]),t._v(" "),v("tr",[v("td",[t._v("LessThan")]),t._v(" "),v("td",[t._v("findByAgeLessThan")]),t._v(" "),v("td",[t._v("… where x.age < ?1")])]),t._v(" "),v("tr",[v("td",[t._v("LessThanEqual")]),t._v(" "),v("td",[t._v("findByAgeLessThanEqual")]),t._v(" "),v("td",[t._v("… where x.age <= ?1")])]),t._v(" "),v("tr",[v("td",[t._v("GreaterThan")]),t._v(" "),v("td",[t._v("findByAgeGreaterThan")]),t._v(" "),v("td",[t._v("… where x.age > ?1")])]),t._v(" "),v("tr",[v("td",[t._v("GreaterThanEqual")]),t._v(" "),v("td",[t._v("findByAgeGreaterThanEqual")]),t._v(" "),v("td",[t._v("… where x.age >= ?1")])]),t._v(" "),v("tr",[v("td",[t._v("After")]),t._v(" "),v("td",[t._v("findByStartDateAfter")]),t._v(" "),v("td",[t._v("… where x.startDate > ?1")])]),t._v(" "),v("tr",[v("td",[t._v("Before")]),t._v(" "),v("td",[t._v("findByStartDateBefore")]),t._v(" "),v("td",[t._v("… where x.startDate < ?1")])]),t._v(" "),v("tr",[v("td",[t._v("IsNull, Null")]),t._v(" "),v("td",[t._v("findByAge(Is)Null")]),t._v(" "),v("td",[t._v("… where x.age is null")])]),t._v(" "),v("tr",[v("td",[t._v("IsNotNull, NotNull")]),t._v(" "),v("td",[t._v("findByAge(Is)NotNull")]),t._v(" "),v("td",[t._v("… where x.age not null")])]),t._v(" "),v("tr",[v("td",[t._v("Like")]),t._v(" "),v("td",[t._v("findByFirstnameLike")]),t._v(" "),v("td",[t._v("… where x.firstname like ?1")])]),t._v(" "),v("tr",[v("td",[t._v("NotLike")]),t._v(" "),v("td",[t._v("findByFirstnameNotLike")]),t._v(" "),v("td",[t._v("… where x.firstname not like ?1")])]),t._v(" "),v("tr",[v("td",[t._v("StartingWith")]),t._v(" "),v("td",[t._v("findByFirstnameStartingWith")]),t._v(" "),v("td",[t._v("… where x.firstname like ?1 (parameter bound with appended %)")])]),t._v(" "),v("tr",[v("td",[t._v("EndingWith")]),t._v(" "),v("td",[t._v("findByFirstnameEndingWith")]),t._v(" "),v("td",[t._v("… where x.firstname like ?1 (parameter bound with prepended %)")])]),t._v(" "),v("tr",[v("td",[t._v("Containing")]),t._v(" "),v("td",[t._v("findByFirstnameContaining")]),t._v(" "),v("td",[t._v("… where x.firstname like ?1 (parameter bound wrapped in %)")])]),t._v(" "),v("tr",[v("td",[t._v("OrderBy")]),t._v(" "),v("td",[t._v("findByAgeOrderByLastnameDesc")]),t._v(" "),v("td",[t._v("… where x.age = ?1 order by x.lastname desc")])]),t._v(" "),v("tr",[v("td",[t._v("Not")]),t._v(" "),v("td",[t._v("findByLastnameNot")]),t._v(" "),v("td",[t._v("… where x.lastname <> ?1")])]),t._v(" "),v("tr",[v("td",[t._v("In")]),t._v(" "),v("td",[t._v("findByAgeIn(Collection"),v("Age",[t._v(" ages)")])],1),t._v(" "),v("td",[t._v("… where x.age in ?1")])]),t._v(" "),v("tr",[v("td",[t._v("NotIn")]),t._v(" "),v("td",[t._v("findByAgeNotIn(Collection"),v("Age",[t._v(" ages)")])],1),t._v(" "),v("td",[t._v("… where x.age not in ?1")])]),t._v(" "),v("tr",[v("td",[t._v("True")]),t._v(" "),v("td",[t._v("findByActiveTrue()")]),t._v(" "),v("td",[t._v("… where x.active = true")])]),t._v(" "),v("tr",[v("td",[t._v("False")]),t._v(" "),v("td",[t._v("findByActiveFalse()")]),t._v(" "),v("td",[t._v("… where x.active = false")])]),t._v(" "),v("tr",[v("td",[t._v("IgnoreCase")]),t._v(" "),v("td",[t._v("findByFirstnameIgnoreCase")]),t._v(" "),v("td",[t._v("… where UPPER(x.firstame) = UPPER(?1)")])])])]),t._v(" "),v("h2",{attrs:{id:"动态查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动态查询"}},[t._v("#")]),t._v(" 动态查询")]),t._v(" "),v("h3",{attrs:{id:"自定义查询条件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#自定义查询条件"}},[t._v("#")]),t._v(" 自定义查询条件")]),t._v(" "),v("p",[t._v("1、实现Specification接口（提供泛型-查询对象的类型）")]),t._v(" "),v("p",[t._v("2、实现toPredicate方法（构造查询条件")]),t._v(" "),v("p",[t._v("3、需要借助方法参数中的两个参数")]),t._v(" "),v("p",[t._v("​\troot：获取需要查询的对象属性")]),t._v(" "),v("p",[t._v("​\tCriteriaQuery: 顶层的查询对象，自定义查询方式")]),t._v(" "),v("p",[t._v("​\tCriteriaBuilder：构造查询条件的，内部封装了很多查询条件（模糊查询，精准匹配）")]),t._v(" "),v("h3",{attrs:{id:"排序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序：")]),t._v(" "),v("p",[t._v("创建排序对象，通过构造方法实例化")]),t._v(" "),v("p",[t._v("构造方法的第一个参数：排序的顺序（正序，倒序）")]),t._v(" "),v("p",[t._v("Sort.Direction.DESC:正序")]),t._v(" "),v("p",[t._v("Sort.Direction.ASC:正序")]),t._v(" "),v("p",[t._v("第二个参数：排序依据的属性名称")]),t._v(" "),v("h3",{attrs:{id:"分页"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分页"}},[t._v("#")]),t._v(" 分页：")]),t._v(" "),v("p",[t._v("Pageable：分页参数")]),t._v(" "),v("p",[t._v("分页参数：查询的页码，以及每页查询的条数")]),t._v(" "),v("p",[t._v("返回：Page(springDataJpa封装好的pageBean对象。包含了数据列表、总条数等信息)")]),t._v(" "),v("p",[v("strong",[t._v("操作步骤")])]),t._v(" "),v("p",[t._v("1、明确表关系")]),t._v(" "),v("p",[t._v("2、确定表关系（描述 外键 | 中间表）")]),t._v(" "),v("p",[t._v("3、编写实体类，在实体类中描述表关系（包含关系）")]),t._v(" "),v("p",[t._v("4、配置映射关系")]),t._v(" "),v("h2",{attrs:{id:"使用注解的方式配置多表关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用注解的方式配置多表关系"}},[t._v("#")]),t._v(" 使用注解的方式配置多表关系")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("声明关系")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v(" @OneToMany : 配置一对多关系\n")])])])])]),t._v(" "),v("p",[t._v("​\t\ttargetEntity ： 对方对象的字节码对象")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("配置外键（或中间表）")])]),t._v(" "),v("p",[t._v("​\t\t@JoinColum : 配置外键")]),t._v(" "),v("p",[t._v("​\t\t\tname ： 外键字段名称")]),t._v(" "),v("p",[t._v("​\t\t\treferencedColumnName : 参照的主表的主键名字段名称（依数据库为准）")]),t._v(" "),v("p",[v("strong",[t._v("配置联系人到客户的多对一关系")])]),t._v(" "),v("p",[t._v("​\t使用注解的形式配置多对一关系")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("配置表关系")]),t._v(" "),v("p",[t._v("@ManyToOne:配置多对一关系")]),t._v(" "),v("p",[t._v("targetEntity ： 对方的实体类字节码 。表示与其关联")]),t._v(" "),v("p",[t._v("mappedBy： 对象配置关系的属性名称。表示放弃维护全关联")]),t._v(" "),v("p",[t._v("cascade ： 配置级联(值为枚举对象)")]),t._v(" "),v("p",[t._v("​\tCascadeType.REMOVE \t删除")]),t._v(" "),v("p",[t._v("​\tCascadeType.MERGE\t更新")]),t._v(" "),v("p",[t._v("​\tCascadeType.PERSIST \t保存")]),t._v(" "),v("p",[t._v("​\tCascadeType.ALL\t \t所有")]),t._v(" "),v("p",[t._v("fecth ： 加载策略。")]),t._v(" "),v("p",[t._v("​\t\tFetchType.EAGER（")]),t._v(" "),v("p",[t._v("​\t\tFetchType.LAZY(默认)")]),t._v(" "),v("h3",{attrs:{id:"注解配置多对多关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#注解配置多对多关系"}},[t._v("#")]),t._v(" 注解配置多对多关系")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("声明表关系的配置")]),t._v(" "),v("p",[t._v("@ManyToMany（targetEntity = *.class） //填入需要配置关系的实体类字节码")]),t._v(" "),v("p",[t._v('@JoinTable(name= "中间表名称",')]),t._v(" "),v("p",[t._v('joinColumns = {@JoinColum(name = "当前对象在中间表中的外键")}，')]),t._v(" "),v("p",[t._v('inverseJoinColumns = {@JoinColum(name = "对方表在中间表的外键")}')]),t._v(" "),v("p",[t._v(")")])]),t._v(" "),v("li",[v("p",[t._v("配置中间表（包含两个外键）")])])])])]),t._v(" "),v("h2",{attrs:{id:"对象导航查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对象导航查询"}},[t._v("#")]),t._v(" 对象导航查询：")]),t._v(" "),v("p",[t._v("默认使用延迟加载的形式查询的")]),t._v(" "),v("p",[t._v("调用get方法并不会立即发送查询，而是在使用关联对象的时候才会查询（延迟加载）")]),t._v(" "),v("p",[t._v("修改配置，将延迟加载改为立即加载")]),t._v(" "),v("p",[t._v("fetch需要配置到夺标映射关系的注解上")]),t._v(" "),v("p",[t._v("​\t2、配置外键（中间表）")]),t._v(" "),v("p",[t._v("​\t\t@JoinColumn")]),t._v(" "),v("p",[t._v("​\t\t\tname : 外键的字段名")]),t._v(" "),v("p",[t._v("​\t \t\t\treferencedColumnName ： 外键参照的主表的主键名字段名称")]),t._v(" "),v("p",[t._v("​\t 注意：在类中配置双向关系时，应该在其中一个外键字段注释@JoinColumn(insertable=false,updatable=false)否则会因为同一个字段重复注册报错，导致容器无法初始化？有没有更好的解决办法")]),t._v(" "),v("p",[t._v("@NameEntityGraph")]),t._v(" "),v("p",[t._v("配置在@Entity上面")]),t._v(" "),v("p",[t._v("@EntityGraph")]),t._v(" "),v("p",[t._v("配置在dao层的方法上面")]),t._v(" "),v("h2",{attrs:{id:"分页-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分页-2"}},[t._v("#")]),t._v(" 分页")]),t._v(" "),v("p",[t._v("Jpa内置分页方法"),v("code",[t._v("findAll(Specification<> ,pageable)")]),t._v(" 或 "),v("code",[t._v("findAll(Pageable)")]),t._v("方法")]),t._v(" "),v("ul",[v("li",[t._v("Specification: 查询条件")]),t._v(" "),v("li",[t._v("Pageable：分页参数")])]),t._v(" "),v("p",[t._v("这两个方法都会返回一个Page对象（SpringDataJpa封装好的JavaBean）")]),t._v(" "),v("div",{staticClass:"language-java line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("testSpec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Specification")]),t._v(" spec "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * PageRequest： Pageable的实现类\n     * \t\t第一个参数： 当前查询的页数\n     *\t\t第二个参数： 每页查询的数量\n     *\t\t第三个参数： sort 排序方法\n     */")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pageable")]),t._v(" pageable "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PageRequest")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Page")]),v("span",{pre:!0,attrs:{class:"token generics"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Customer")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" pages "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" customerDao"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("findAll")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("spec"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pageable"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br"),v("span",{staticClass:"line-number"},[t._v("10")]),v("br"),v("span",{staticClass:"line-number"},[t._v("11")]),v("br"),v("span",{staticClass:"line-number"},[t._v("12")]),v("br")])]),v("p",[t._v("::: warn")]),t._v(" "),v("p",[t._v("在新版本中.pageRequest的构造方法已被启用，修饰符为protect，创建PageRequest的方式应该改为PageRequest.of(...);")]),t._v(" "),v("p",[t._v(":::")]),t._v(" "),v("p",[v("strong",[t._v("Page对象常用方法")])]),t._v(" "),v("ul",[v("li",[t._v("page.getContent() ：获取数据集合列表")]),t._v(" "),v("li",[t._v("page.getTotalElements()：获取总条数")]),t._v(" "),v("li",[t._v("page.getTotalPages()：得到总页数")])]),t._v(" "),v("p",[t._v("注： jpa的分页方法为物理分页，适合数据库储存量较大的情形")]),t._v(" "),v("p",[v("img",{attrs:{src:e(523),alt:"1583806256(1).png"}})]),t._v(" "),v("img",{attrs:{src:e(524),alt:"1583806405(1).png"}})])}),[],!1,null,null,null);a.default=_.exports}}]);